<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Custom="http://schemas.microsoft.com/surface/2008"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	x:Class="P02Project.TwitterList"
	x:Name="UserControl"
	d:DesignWidth="1630" d:DesignHeight="900">

    <UserControl.Resources>
        <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
        <Style x:Key="MyButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="0"
                            Padding="4,2" 
                            BorderBrush="DarkGray" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <DataTemplate x:Key="SurfaceListBoxItemDataTemplate">
            <StackPanel Height="120" Width="190" Background="Gray">
                <Label 
                        Content="{Binding}"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        FontSize="20"/>
            </StackPanel>
        </DataTemplate>
		
		
		<!-- public section -->
    	<SolidColorBrush x:Key="ControlHitAreaBrush"    
    		Color="#00FFFFFF"/>
        <!-- Minimum HitArea Base Style for 55 dpi-->
    	<Style x:Key="SurfaceHitAreaBaseStyle"
    		TargetType="{x:Type Control}">
    		<Setter Property="SnapsToDevicePixels"
    			Value="False"/>
    		<Setter Property="Background"
    			Value="{StaticResource ControlHitAreaBrush}"/>
    		<Setter Property="IsTabStop"
    			Value="False"/>
    		<Setter Property="Focusable"
    			Value="False"/>
    		<Setter Property="FocusVisualStyle"
    			Value="{x:Null}"/>
    		<Setter Property="MinWidth"
    			Value="40" />
    		<Setter Property="MinHeight"
    			Value="40" />
    	</Style>
    	<Style x:Key="SurfaceVertScrollBarRepeatButton"
    		TargetType="{x:Type Custom:SurfaceRepeatButton}" >
    		<Setter Property="Interval"
    			Value="150" />
    		<Setter Property="BorderBrush"
    			Value="{x:Null}" />
    		<Setter Property="Background"
    			Value="{StaticResource ControlHitAreaBrush}" />
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Custom:SurfaceRepeatButton}">
    					<Grid Width="40" Background="{TemplateBinding Background}">
    						<Rectangle  HorizontalAlignment="Center" 
    							x:Name="Line"
    							MinWidth="2"
    							Fill="{DynamicResource {x:Static Custom:SurfaceColors.TrackBackgroundBrushKey}}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"   
    								TargetName="Line"                             
    								Value="{DynamicResource {x:Static Custom:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <!-- ScrollBar Vert Thumb -->
    	<Style x:Key="SurfaceScrollBarThumbStyle"
    		TargetType="{x:Type Custom:SurfaceThumb}"
    		BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Custom:SurfaceThumb}">
    					<ControlTemplate.Resources>
    						<Storyboard x:Key="Touch">
    							<DoubleAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Width" 
    								To="16"/>
    							<ThicknessAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin"
    								To="-1,0,-1,0" />
    						</Storyboard>
    						<Storyboard x:Key="Release">
    							<DoubleAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb" 
    								Storyboard.TargetProperty="Width"
    								To="14"/>
    							<ThicknessAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin" 
    								To="0,0,0,0" />
    						</Storyboard>
    					</ControlTemplate.Resources>
    					<Grid   x:Name="Grid"
    						Background="{TemplateBinding Background}"
    						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
    						<Rectangle  x:Name="Thumb"
    							Height="Auto"
    							Width="14" 
    							HorizontalAlignment="Stretch"
    							VerticalAlignment="Stretch"
    							Fill="{DynamicResource {x:Static Custom:SurfaceColors.ThumbEnabledBrushKey}}" />
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="Custom:TouchExtensions.AreAnyInputDevicesCapturedWithin"
    							Value="True">
    							<Trigger.EnterActions>
    								<BeginStoryboard Storyboard="{StaticResource Touch}"/>
    							</Trigger.EnterActions>
    							<Trigger.ExitActions>
    								<BeginStoryboard Storyboard="{StaticResource Release}"/>
    							</Trigger.ExitActions>
    						</Trigger>
    						<Trigger  Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"
    								TargetName="Thumb"
    								Value="{DynamicResource {x:Static Custom:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <!-- ScrollBar RepeatButton -->
    	<Style x:Key="SurfaceHorzScrollBarRepeatButton"
    		TargetType="{x:Type Custom:SurfaceRepeatButton}" >
    		<Setter Property="Interval"
    			Value="150" />
    		<Setter Property="BorderBrush"
    			Value="{x:Null}" />
    		<Setter Property="Background"
    			Value="{StaticResource ControlHitAreaBrush}" />
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Custom:SurfaceRepeatButton}">
    					<Grid Height="40" Background="{TemplateBinding Background}">
    						<Rectangle VerticalAlignment="Center"
    							x:Name="Line"
    							MinHeight="2"
    							Fill="{DynamicResource {x:Static Custom:SurfaceColors.TrackBackgroundBrushKey}}"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"   
    								TargetName="Line"                             
    								Value="{DynamicResource {x:Static Custom:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="SurfaceScrollBarHorizThumbStyle"
    		TargetType="{x:Type Custom:SurfaceThumb}"
    		BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Custom:SurfaceThumb}">
    					<ControlTemplate.Resources>
          <!-- Vertical orientation -->
    						<Storyboard x:Key="Touch">
    							<DoubleAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Height" 
    								To="16"/>
    							<ThicknessAnimation Duration="0:0:0.05"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin"
    								To="0,-1,0,-1" />
    						</Storyboard>
    						<Storyboard x:Key="Release">
    							<DoubleAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb" 
    								Storyboard.TargetProperty="Height"
    								To="14"/>
    							<ThicknessAnimation Duration="0:0:0.1"
    								Storyboard.TargetName="Thumb"
    								Storyboard.TargetProperty="Margin" 
    								To="0,0,0,0" />
    						</Storyboard>
    					</ControlTemplate.Resources>
    					<Grid x:Name="Grid"
    						Background="{TemplateBinding Background}"
    						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
    						<Rectangle  x:Name="Thumb"
    							Width="Auto"
    							Height="14"
    							HorizontalAlignment="Stretch"
    							VerticalAlignment="Stretch"  
    							Fill="{DynamicResource {x:Static Custom:SurfaceColors.ThumbEnabledBrushKey}}" />
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="Custom:TouchExtensions.AreAnyInputDevicesCapturedWithin"
    							Value="True">
    							<Trigger.EnterActions>
    								<BeginStoryboard Storyboard="{StaticResource Touch}"/>
    							</Trigger.EnterActions>
    							<Trigger.ExitActions>
    								<BeginStoryboard Storyboard="{StaticResource Release}"/>
    							</Trigger.ExitActions>
    						</Trigger>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="Fill"
    								TargetName="Thumb"
    								Value="{DynamicResource {x:Static Custom:SurfaceColors.ThumbDisabledBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        
    <!-- ScrollBar -->
    	<Style x:Key="SurfaceScrollBarStyle"
    		TargetType="{x:Type Custom:SurfaceScrollBar}"
         >
    		<Style.Resources>
    			<System:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">38</System:Double>
    			<System:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">38</System:Double>
    		</Style.Resources>
    		<Setter Property="Stylus.IsPressAndHoldEnabled"
    			Value="False"/>
    		<Setter Property="Stylus.IsFlicksEnabled"
    			Value="False"/>
    		<Setter Property="Width"
    			Value="38"/>
    		<Setter Property="Height"
    			Value="Auto"/>
    		<Setter Property="Template">
    			<Setter.Value>
      <!-- vertical scroll bar -->
    				<ControlTemplate TargetType="{x:Type Custom:SurfaceScrollBar}">
    					<Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
    						<Border x:Name="Track"
    							VerticalAlignment="Stretch"
    							HorizontalAlignment="Stretch" Background="#FFdbdbdb">
    							<Track x:Name="PART_Track"
    								IsDirectionReversed="True" OpacityMask="#FF767676">
    								<Track.IncreaseRepeatButton>
    									<Custom:SurfaceRepeatButton x:Name="IncreaseRepeat"
    										Background="{TemplateBinding Background}"
    										HorizontalAlignment="Center"
    										Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
    										Command="ScrollBar.PageDownCommand"/>
    								</Track.IncreaseRepeatButton>
    								<Track.DecreaseRepeatButton>
    									<Custom:SurfaceRepeatButton x:Name="DecreaseRepeat"
    										Background="{TemplateBinding Background}"
    										HorizontalAlignment="Center"
    										Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
    										Command="ScrollBar.PageUpCommand"/>
    								</Track.DecreaseRepeatButton>
    								<Track.Thumb>
    									<Custom:SurfaceThumb  Style="{StaticResource SurfaceScrollBarThumbStyle}"
    										Background="{TemplateBinding Background}"
    										HorizontalAlignment="Center" 
    										x:Name="Thumb" Foreground="Red"/>
    								</Track.Thumb>
    							</Track>
    						</Border>
    					</Grid>
    					<ControlTemplate.Triggers>
          <!-- Animates Scrollbar from small to large state -->
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="IsEnabled"
    								TargetName="PART_Track"
    								Value="False"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>

    		<Style.BasedOn>
    			<StaticResource ResourceKey="SurfaceHitAreaBaseStyle"/>
    		</Style.BasedOn>

    		<Style.Triggers>
    <!-- Horizontal orientation -->
    			<Trigger Property="Orientation"   Value="Horizontal">
    				<Setter Property="Width"
    					Value="Auto"/>
    				<Setter Property="Height"
    					Value="38"/>
      <!-- change the whole template -->
    				<Setter Property="Template">
    					<Setter.Value>
    						<ControlTemplate TargetType="{x:Type Custom:SurfaceScrollBar}">
    							<Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
    								<Border x:Name="Track"
    									VerticalAlignment="Stretch"
    									HorizontalAlignment="Stretch">
    									<Track x:Name="PART_Track">
    										<Track.DecreaseRepeatButton>
    											<Custom:SurfaceRepeatButton x:Name="DecreaseRepeat"
    												Background="{TemplateBinding Background}"
    												VerticalAlignment="Center"
    												Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"													
    												Command="ScrollBar.PageLeftCommand" />
    										</Track.DecreaseRepeatButton>
    										<Track.IncreaseRepeatButton>
    											<Custom:SurfaceRepeatButton x:Name="IncreaseRepeat" 
    												Background="{TemplateBinding Background}"
    												VerticalAlignment="Center"
    												Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"
    												Command="ScrollBar.PageRightCommand"/>
    										</Track.IncreaseRepeatButton>
    										<Track.Thumb>
    											<Custom:SurfaceThumb  Style="{StaticResource SurfaceScrollBarHorizThumbStyle}"	
    												Background="{TemplateBinding Background}"
    												VerticalAlignment="Center" 
    												x:Name="Thumb"/>
    										</Track.Thumb>
    									</Track>
    								</Border>
    							</Grid>
    							<ControlTemplate.Triggers>
              <!-- Animates Scrollbar from small to large state -->
    								<Trigger Property="IsEnabled"
    									Value="False">
    									<Setter Property="Opacity"
    										TargetName="IncreaseRepeat"
    										Value="0.33"/>
    									<Setter Property="Opacity"
    										TargetName="DecreaseRepeat"
    										Value="0.33"/>
    									<Setter Property="IsEnabled"
    										TargetName="PART_Track"
    										Value="False"/>
    								</Trigger>
    							</ControlTemplate.Triggers>
    						</ControlTemplate>
    					</Setter.Value>
    				</Setter>
    			</Trigger>
    		</Style.Triggers>
    	</Style>

<!-- ScrollViewerBase -->
    	<Style x:Key="SurfaceScrollViewerStyle1"
    		TargetType="{x:Type Custom:SurfaceScrollViewer}">
    		<Setter Property="Elasticity"
    			Value="0.4,0.4" />
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
    			Value="Auto" />
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
    			Value="Auto" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Custom:SurfaceScrollViewer}">
    					<Grid   Background="{TemplateBinding Background}"
    						HorizontalAlignment="Stretch" 
    						VerticalAlignment="Stretch">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="*" />
    							<ColumnDefinition Width="Auto" />
    						</Grid.ColumnDefinitions>
    						<Grid.RowDefinitions>
    							<RowDefinition Height="*" />
    							<RowDefinition Height="Auto" />
    						</Grid.RowDefinitions>
    						<Border x:Name="PART_ElasticBorder"
    							Background="{TemplateBinding Background}">
    							<ScrollContentPresenter 
    								Margin="-1,-1,-1,-1"
    								Grid.Column="0"
    								Grid.ColumnSpan="1"
    								Grid.Row="0"
    								Grid.RowSpan="1"
    								Content="{TemplateBinding Content}"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								CanContentScroll="{TemplateBinding CanContentScroll}"
    								CanHorizontallyScroll="False"
    								CanVerticallyScroll="False"
    								ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
    						</Border>

    						<Custom:SurfaceScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
    							x:Name="PART_HorizontalScrollBar"
    							Grid.Column="0"
    							Grid.Row="1"
    							Orientation="Horizontal"
    							Maximum="{TemplateBinding ScrollableWidth}"
    							Minimum="0"
    							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    							AutomationProperties.AutomationId="HorizontalScrollBar"
    							Height="Auto"
    							Style="{StaticResource SurfaceScrollBarStyle}"
    							LargeChange="1"
    							ViewportSize="{TemplateBinding ViewportWidth}"
    							ScrollViewer.HorizontalScrollBarVisibility="Disabled"
    							HorizontalContentAlignment="Stretch"
    							VerticalContentAlignment="Stretch"
    							HorizontalAlignment="Stretch"
    							Foreground="{x:Null}"/>
    						<Custom:SurfaceScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
    							x:Name="PART_VerticalScrollBar"                           
    							Grid.Column="1"
    							Grid.Row="0"
    							Orientation="Vertical"
    							Maximum="{TemplateBinding ScrollableHeight}"
    							Minimum="0"
    							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    							AutomationProperties.AutomationId="VerticalScrollBar"
    							Width="Auto"
    							Style="{StaticResource SurfaceScrollBarStyle}"
    							LargeChange="1"
    							ViewportSize="{TemplateBinding ViewportHeight}"
    							ScrollViewer.HorizontalScrollBarVisibility="Disabled"
    							HorizontalContentAlignment="Stretch"
    							VerticalContentAlignment="Stretch"
    							HorizontalAlignment="Stretch"
    							Foreground="{x:Null}"
    							IsEnabled="True"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled"
    							Value="False">
    							<Setter Property="IsEnabled"
    								TargetName="PART_HorizontalScrollBar"
    								Value="False" />
    							<Setter Property="IsEnabled"
    								TargetName="PART_VerticalScrollBar"
    								Value="False" />
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
		
    </UserControl.Resources>


    <Grid x:Name="LayoutRoot">
         
        <StackPanel x:Name="_buttons" HorizontalAlignment="Left" Height="95.5" Width="502.25" Margin="60,413,0,391.5" d:LayoutOverrides="VerticalAlignment" >
        	<Button x:Name="_tweetUsBtn"  Style="{StaticResource MyButtonStyle}" Content="Tweet Us" FontSize="48" FontFamily="/P02Project;component/Resources/Fonts/#Segoe UI Symbol" BorderThickness="0" Background="#ff146290" BorderBrush="#00707070" Foreground="White" Width="502.25" HorizontalAlignment="Center" Click="openWebcam" Height="69.5" VerticalAlignment="Bottom" Margin="10">
        		<Button.Effect>
        			<DropShadowEffect/>
        		</Button.Effect>
        	</Button>
        </StackPanel>
        
        <Image x:Name="_ccfTwitterHome" HorizontalAlignment="Left" Margin="60,72,0,0" Width="502.25" Source="/P02Project;component/Resources/images/Twitter/ChildCanerTwitterHome.png" Height="341" VerticalAlignment="Top"/>
        <Image x:Name="_ccfTwitterQR" HorizontalAlignment="Left" Height="222.5" Margin="203.5,0,0,165" VerticalAlignment="Bottom" Width="226.5" Source="/P02Project;component/Resources/images/Twitter/ChilCancerTwitterQR.png" RenderTransformOrigin="0.535,0.933"/>
        
        <Label x:Name="listTitle" Content="Our Tweets" Height="70" Margin="645,-2,738,0" VerticalAlignment="Top" FontFamily="Segoe UI" FontSize="48"/>

        <Custom:SurfaceScrollViewer x:Name="_tweetsListScrollViewer" Style="{DynamicResource SurfaceScrollViewerStyle1}" Height="800" Margin="645,62,0,18" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" ScrollChanged="_tweetsListScrollViewer_ScrollChanged" >
            
            <StackPanel x:Name="_tweetsList" Width="969.5">
                <!-- label showing each tweet goes here programmatically  -->
            </StackPanel>
        </Custom:SurfaceScrollViewer>
        <Custom:SurfaceScrollViewer x:Name="QRText" HorizontalAlignment="Left" Height="137" Margin="90,0,0,28" VerticalAlignment="Bottom" Width="449"/>
        
    </Grid>
</UserControl>